apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-public-key
data:
  # property-like keys; each key maps to a simple value
  ca-cert: |
    -----BEGIN CERTIFICATE-----
    MIIDJzCCAg+gAwIBAgIUbK+V468tPP3R8H8ZPDsJ3DZjC8kwDQYJKoZIhvcNAQEL
    BQAwIzELMAkGA1UEBhMCSU4xFDASBgNVBAMMC2RvY2tlci1kZW1vMB4XDTIxMDYy
    ODA3MTYwM1oXDTMxMDYyNjA3MTYwM1owIzELMAkGA1UEBhMCSU4xFDASBgNVBAMM
    C2RvY2tlci1kZW1vMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwq3l
    pZR4yjUwpk5DEhwKerlB+cSA5PlIKzaZJ0vIfhzJlWxEDvU1IEIZn6aJzRT0yxdo
    G8YKT2EGfRwg8K1I19fqchR3Vtz6EKFLEOGnp7CUvtC/LTOqqA+rlh5c85uHuXCO
    9IIDJoXVmFwHCTtMvveGzoMD8PVfqmbatdzVscW9xjTlclqmExIgEuFNJ+kvs3Om
    HkZGEuR+GY1l0wI+mM6NDGMAMj/8foD4NoZkoGlbJdMaZID0rQbIUiA9d/lAdWI3
    EzJ1jcJfhG8yfY1vUaxOgMl7VjFmfmJlzv9B0svbEpP3liFp/razkprOlzoSn1xO
    pEaIBFTC3MN/K/pLlwIDAQABo1MwUTAdBgNVHQ4EFgQU/P9B3I1sGadM8MCjFYUN
    FGK/kqYwHwYDVR0jBBgwFoAU/P9B3I1sGadM8MCjFYUNFGK/kqYwDwYDVR0TAQH/
    BAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAQEAVPoaOdcaAZO73S/ExHK4xe6tawKK
    2cONWc+oHsj8iwCOOLgFmdPeDgTG8WQxEqK6JfPnOMDjZdj72Uok02ejoJBqDRtD
    SKx6GUbouJqm9UKU2ghUFcr9Nr95fHcy8WcXybgvl35PwtswyjI/VzTA/xSFJDz+
    A1cPUJeGtm5ZdJ4PwpDC3ucY4FYaZejKPwOxiLQ0ozUip6yfhvcd+Y5NO/d/Z8wW
    9ZuGnd+xXY1C78i9h16q2eXdIEiW9gESD6QoVGW+0sC/qeEn7BOAFugprjPim7cH
    VB3Rw9kZx+1iSUOTjJfGD7r56PfXZXkuUz/SGSV1NLHDVArQA0xUTaXNSQ==
    -----END CERTIFICATE-----
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gke-kube-crud
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kube-crud
  template:
    metadata:
      labels:
        app: kube-crud
    spec:
      containers:
        - name: kube-crud-app
          # Replace LOCATION_TO_KUBECRUD_IMAGE with kubecrud image location
          image: LOCATION_TO_KUBECRUD_IMAGE # e.g. gcr.io/$GCLOUD_PROJECT/gke-kube-crud:latest
          # This app listens on port 8080 for web traffic by default.
          ports:
            - containerPort: 8080
          env:
            - name: PORT
              value: "8080"
            - name: HELLOWORLD_IMAGE_LOCATION
              value: HELLOWORLD_IMAGE_LOCATION_HERE # e.g. gcr.io/$GCLOUD_PROJECT/helloworld-gke:latest
            - name: UPDATED_IMAGE_LOCATION
              value: UPDATED_IMAGE_LOCATION_HERE # e.g. gcr.io/$GCLOUD_PROJECT/helloworld-gke:v1
            - name: ML_IMAGE_LOCATION
              value: ML_IMAGE_LOCATION
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: KAFKA_BOOTSTRAP_SERVERS
            - name: KAFKA_TOPIC
              value: KAFKA_TOPIC
            - name: KAFKA_GROUP_ID
              value: KAFKA_GROUP_ID
            - name: KAFKA_USER
              value: KAFKA_USER
            - name: KAFKA_PASS
              value: KAFKA_PASS
          volumeMounts:
            - mountPath: "/mnt/c"
              name: test-volume
            - mountPath: "/key-used"
              name: cert-config
      volumes:
        - name: test-volume
          # This GCE PD must already exist.
          persistentVolumeClaim:
            claimName: CLAIM_NAME
        - name: cert-config
          configMap:
            name: kafka-public-key
            items:
              - key: "ca-cert"
                path: "ca-cert"
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: deployment-manager
rules:
  - apiGroups: ["", "extensions", "apps", "batch"]
    resources: ["deployments", "replicasets", "pods", "jobs", "jobs/status"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: deployment-manager
subjects:
  - kind: ServiceAccount
    name: default
    namespace: default
roleRef:
  kind: ClusterRole
  name: deployment-manager
  apiGroup: rbac.authorization.k8s.io
